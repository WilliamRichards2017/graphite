include(ExternalProject)

SET( GRAPHITE_DEPENDENCIES )

FIND_PACKAGE(CURL)
IF(CURL_FOUND)
  SET(CURL_LIBRARIES ${CURL_LIBRARIES} CACHE INTERNAL "curl Lib")
  SET(CURL_INCLUDE_DIR ${CURL_INCLUDE_DIR} CACHE INTERNAL "curl Include")
ELSE(CURL_FOUND)
  include(curl.cmake)
  LIST(APPEND GRAPHITE_DEPENDENCIES ${CURL_PROJECT})
ENDIF(CURL_FOUND)

include(zlib.cmake)
LIST(APPEND GRAPHITE_DEPENDENCIES ${ZLIB_PROJECT})
#include(boost.cmake)
#LIST(APPEND GRAPHITE_DEPENDENCIES ${BOOST_PROJECT})
include(fastahack.cmake)
LIST(APPEND GRAPHITE_DEPENDENCIES ${FASTAHACK_PROJECT})
include(bamtools.cmake)
LIST(APPEND GRAPHITE_DEPENDENCIES ${BAMTOOLS_PROJECT})
include(tabix.cmake)
LIST(APPEND GRAPHITE_DEPENDENCIES ${TABIX_PROJECT})
include(cxxopts.cmake)
LIST(APPEND GRAPHITE_DEPENDENCIES ${CXXOPTS_PROJECT})
include(htslib.cmake)
LIST(APPEND GRAPHITE_DEPENDENCIES ${HTSLIB_PROJECT})
#include(bcftools.cmake)
#LIST(APPEND GRAPHITE_DEPENDENCIES ${BCFTOOLS_PROJECT})

ADD_SUBDIRECTORY(ssw)
ADD_SUBDIRECTORY(gssw)
ADD_SUBDIRECTORY(gtest)


SET(GRAPHITE_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external CACHE INTERNAL "" FORCE)

SET(GRAPHITE_EXTERNAL_PROJECT_DIR ${CMAKE_BINARY_DIR}/externals/graphite_external_project CACHE INTERNAL "external project directory")
SET(GRAPHITE_EXTERNAL_PROJECT graphite_external_project CACHE INTERNAL "all graphite external projects")
ExternalProject_Add(${GRAPHITE_EXTERNAL_PROJECT}
    DEPENDS ${GRAPHITE_DEPENDENCIES}
    DOWNLOAD_COMMAND ""
	SOURCE_DIR ${GRAPHITE_SOURCE_DIR}
	BINARY_DIR ${GRAPHITE_EXTERNAL_PROJECT_DIR}/bin
	BUILD_COMMAND ""
	INSTALL_COMMAND ""
    UPDATE_COMMAND ""
	CMAKE_CACHE_ARGS
        -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
        -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
)
